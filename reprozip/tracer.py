from __future__ import unicode_literals

from datetime import datetime
import logging
import os
import shutil

import reprozip
from reprozip import _pytracer


def trace(binary, argv, directory, append):
    """Main function for the trace subcommand.
    """
    cwd = os.getcwd()
    system_dirs = ('/etc', '/lib', '/run', '/sbin', '/usr', '/var')
    if (any(cwd.startswith(c) for c in system_dirs) and
            not cwd.startswith('/usr/local')):
        logging.warning(
                "You are running this experiment from a system directory! "
                "Autodetection of non-system files will probably not work as "
                "intended")

    # Trace directory
    if not append:
        if os.path.exists(directory):
            logging.info("Removing existing directory %s" % directory)
            shutil.rmtree(directory)
        os.mkdir(directory)
    else:
        if not os.path.exists(directory):
            logging.warning("--continue was specified but %s does not exist "
                            "-- creating" % directory)
            os.mkdir(directory)

    database = os.path.join(directory, 'trace.sqlite3')
    logging.info("Running program")
    _pytracer.execute(binary, argv, database) # Might raise _pytracer.Error
    logging.info("Program completed")

    # Write configuration file
    config = os.path.join(directory, 'config.py')
    oldconfig = {}
    if os.path.exists(config):
        # Loads in previous config
        execfile(config, oldconfig)
    with open(config, 'w') as fp:
        # Writes preamble
        runs = oldconfig.get('runs', []) + [{'binary': binary, 'argv': argv,
                                             'workingdir': cwd}]
        runs = "\n        " + ",\n        ".join(repr(r) for r in runs)
        fp.write("""\
# ReproZip configuration file
# This file was generated by reprozip {version} at {date}

# You might want to edit this file before running the packer
# See 'reprozip pack -h' for help

# Run info
version = '{version}'
runs = [{runs}]

# Files to pack
# All the files below were used by the program; they will be included in the
# generated package
files = {{
    TODO
}}
""".format(
            version=reprozip.__version__,
            date=datetime.now().isoformat(),
            runs=runs))

        # Writes files
        # TODO

    print("Configuration file written in {}".format(config))
    print("Edit that file then run the packer -- "
          "use 'reprozip pack -h' for help")
