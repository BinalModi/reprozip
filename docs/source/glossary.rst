..  _glossary:

Glossary
********

..  glossary::

    configuration
        A YAML file generated by ``reprozip trace`` and read by ``reprozip pack``. It can be edited before creating the pack to control which files are to be included and other metadata used during reproduction. See :ref:`packing-config`.

    distribution package
        These are the components installed by your Linux distribution's package manager. ReproZip tries to identify which distribution package each file comes from; this allows the reproducer to install the software from his distribution's package manager instead of extracting the files from the .rpz file, however compatibility is not guaranteed (as an updated version might be installed instead of the original one, which might behave differently) even though not including your distribution's files saves space.

    input and output (files)
        ReproZip has a notion of input and output files. These are a short list of special paths associated with a name. `reprounzip` allows the reproducer to replace input files with his own and to download the resulting output files for further examination.

    package (or pack)
        A .rpz file generated by ``reprozip pack``, containing all the files and metadata required to reproduce the experiment on another machine. See :ref:`packing`.

    run
        A single command traced by ``reprozip trace [--continue]``. Multiple commands can be traced successively before creating the pack; the reproducer will be able to run them separately using ``reprounzip <unpacker> run <directory> <run-id>``.

    unpacker
        A plugin for the `reprounzip` program that knows how to reproduce an experiment from a .rpz package; for example `chroot` and `vagrant` are unpackers. `chroot`, `directory` and `graph` are distributed with `reprounzip`; others come in separate packages (`reprounzip-docker` and `reprounzip-vagrant`). See :ref:`unpack-unpackers`.
